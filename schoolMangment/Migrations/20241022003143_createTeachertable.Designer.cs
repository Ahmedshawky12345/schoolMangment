// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using schoolMangment.Data;

#nullable disable

namespace schoolMangment.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241022003143_createTeachertable")]
    partial class createTeachertable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("schoolMangment.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("teacher_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("teacher_id");

                    b.ToTable("courses");
                });

            modelBuilder.Entity("schoolMangment.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("students");
                });

            modelBuilder.Entity("schoolMangment.Models.StudentCourse", b =>
                {
                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("student_id")
                        .HasColumnType("int");

                    b.HasKey("CourseId", "student_id");

                    b.HasIndex("student_id");

                    b.ToTable("studentCourses");
                });

            modelBuilder.Entity("schoolMangment.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("teachers");
                });

            modelBuilder.Entity("schoolMangment.Models.Course", b =>
                {
                    b.HasOne("schoolMangment.Models.Teacher", "teacher")
                        .WithMany("Courses")
                        .HasForeignKey("teacher_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("teacher");
                });

            modelBuilder.Entity("schoolMangment.Models.StudentCourse", b =>
                {
                    b.HasOne("schoolMangment.Models.Course", "Course")
                        .WithMany("studentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("schoolMangment.Models.Student", "student")
                        .WithMany("studentCourses")
                        .HasForeignKey("student_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("student");
                });

            modelBuilder.Entity("schoolMangment.Models.Course", b =>
                {
                    b.Navigation("studentCourses");
                });

            modelBuilder.Entity("schoolMangment.Models.Student", b =>
                {
                    b.Navigation("studentCourses");
                });

            modelBuilder.Entity("schoolMangment.Models.Teacher", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
